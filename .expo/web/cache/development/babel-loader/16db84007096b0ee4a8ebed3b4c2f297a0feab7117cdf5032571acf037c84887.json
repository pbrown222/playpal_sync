{"ast":null,"code":"var _jsxFileName = \"/app/code/src/components/Box.tsx\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { colors, borderRadius, shadows } from \"../styles/theme\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Box = ({\n  children,\n  style = {}\n}) => {\n  const {\n    width: screenWidth\n  } = Dimensions.get(\"window\");\n  const getMaxWidth = () => {\n    if (screenWidth >= 992) return 672;\n    if (screenWidth >= 640) return 576;\n    if (screenWidth >= 480) return 512;\n    if (screenWidth >= 375) return 448;\n    return 384;\n  };\n  return _jsxDEV(View, {\n    style: [styles.container, {\n      maxWidth: getMaxWidth(),\n      width: screenWidth < getMaxWidth() ? \"100%\" : getMaxWidth()\n    }, style],\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\nconst styles = StyleSheet.create({\n  container: Object.assign({\n    backgroundColor: colors.playpal.white,\n    borderRadius: borderRadius.lg\n  }, shadows.searchBar, {\n    alignSelf: \"center\"\n  })\n});\nexport default Box;","map":{"version":3,"names":["React","View","StyleSheet","Dimensions","colors","borderRadius","shadows","jsxDEV","_jsxDEV","Box","children","style","width","screenWidth","get","getMaxWidth","styles","container","maxWidth","fileName","_jsxFileName","lineNumber","columnNumber","create","Object","assign","backgroundColor","playpal","white","lg","searchBar","alignSelf"],"sources":["/app/code/src/components/Box.tsx"],"sourcesContent":["import React from \"react\";\nimport { View, StyleSheet, Dimensions } from \"react-native\";\nimport { colors, borderRadius, shadows } from \"../styles/theme\";\n\ninterface BoxProps {\n  children: React.ReactNode;\n  style?: object;\n}\n\nconst Box: React.FC<BoxProps> = ({ children, style = {} }) => {\n  const { width: screenWidth } = Dimensions.get(\"window\");\n\n  // Responsive max width matching React breakpoints\n  const getMaxWidth = () => {\n    if (screenWidth >= 992) return 672; // xl:max-w-2xl\n    if (screenWidth >= 640) return 576; // lg:max-w-xl\n    if (screenWidth >= 480) return 512; // md:max-w-lg\n    if (screenWidth >= 375) return 448; // sm:max-w-md\n    return 384; // max-w-sm\n  };\n\n  return (\n    <View\n      style={[\n        styles.container,\n        {\n          maxWidth: getMaxWidth(),\n          width: screenWidth < getMaxWidth() ? \"100%\" : getMaxWidth(),\n        },\n        style,\n      ]}\n    >\n      {children}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: colors.playpal.white, // bg-white\n    borderRadius: borderRadius.lg, // rounded-lg\n    ...shadows.searchBar, // shadow-sm equivalent\n    alignSelf: \"center\", // mx-auto equivalent\n  },\n});\n\nexport default Box;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,UAAA;AAE1B,SAASC,MAAM,EAAEC,YAAY,EAAEC,OAAO,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOhE,MAAMC,GAAuB,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,KAAK,GAAG,CAAC;AAAE,CAAC,KAAK;EAC5D,MAAM;IAAEC,KAAK,EAAEC;EAAY,CAAC,GAAGV,UAAU,CAACW,GAAG,CAAC,QAAQ,CAAC;EAGvD,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIF,WAAW,IAAI,GAAG,EAAE,OAAO,GAAG;IAClC,IAAIA,WAAW,IAAI,GAAG,EAAE,OAAO,GAAG;IAClC,IAAIA,WAAW,IAAI,GAAG,EAAE,OAAO,GAAG;IAClC,IAAIA,WAAW,IAAI,GAAG,EAAE,OAAO,GAAG;IAClC,OAAO,GAAG;EACZ,CAAC;EAED,OACEL,OAAA,CAACP,IAAI;IACHU,KAAK,EAAE,CACLK,MAAM,CAACC,SAAS,EAChB;MACEC,QAAQ,EAAEH,WAAW,CAAC,CAAC;MACvBH,KAAK,EAAEC,WAAW,GAAGE,WAAW,CAAC,CAAC,GAAG,MAAM,GAAGA,WAAW,CAAC;IAC5D,CAAC,EACDJ,KAAK,CACL;IAAAD,QAAA,EAEDA;EAAQ;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEX,CAAC;AAED,MAAMN,MAAM,GAAGd,UAAU,CAACqB,MAAM,CAAC;EAC/BN,SAAS,EAAAO,MAAA,CAAAC,MAAA;IACPC,eAAe,EAAEtB,MAAM,CAACuB,OAAO,CAACC,KAAK;IACrCvB,YAAY,EAAEA,YAAY,CAACwB;EAAE,GAC1BvB,OAAO,CAACwB,SAAS;IACpBC,SAAS,EAAE;EAAQ;AAEvB,CAAC,CAAC;AAEF,eAAetB,GAAG","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}